package com.iminit.common.model;

import com.iminit.common.model.base.BaseWordSentence;
import com.iminit.word.WordService;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;

import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class WordSentence extends BaseWordSentence<WordSentence> {
    public static final WordSentence dao = new WordSentence().dao();
    WordService wordService = WordService.me;

    public List<Record> wordsSentenceList(String id) {
        List<Record> records = Db.find("SELECT * FROM word_sentence WHERE wordIds LIKE CONCAT('%',?,'%')", id);

        formatWordsId(records);
        return records;
    }

    public List<Record> find() {
        List<Record> records = Db.find("select * from word_sentence");
        formatWordsId(records);
        return records;
    }

    /**
     * 将取出的数据把其id格式化成名称
     * @param records
     */
    private void formatWordsId(List<Record> records) {
        List<Record> wordList = wordService.find();
        Map<String, Record> wordMap = new HashMap();
        for (int i = 0; i < records.size(); i++) {
            Record record = wordList.get(i);
            wordMap.put(String.valueOf(record.get("id")), record);
        }

        Iterator<Record> iterator = records.iterator();
        while (iterator.hasNext()) {
            Record next = iterator.next();
            String ids = next.get("wordIds");
            String[] split = ids.split("-");
            StringBuilder s = new StringBuilder();
            for (int i = 0; i < split.length; i++) {
                String id = split[i];
                if(wordMap.containsKey(id)){
                    s.append(wordMap.get(id).get("content")).append(" ");
                } else {
                    s.append("-").append(" ");
                }
            }
            next.set("wordIds", s.toString());
        }
    }

}
